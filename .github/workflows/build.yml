# main.yml

# Workflow's name
name: Build

# Workflow's trigger
on:
  watch:
    types: [started]
  push:
    tags:
      - 'v*.*.*'

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install -g electron-installer-debian
          npm install
      # step4: build app
      - name: build Ubuntu app
        if: matrix.os == 'ubuntu-18.04'
        run: |

          npm run build:linux
      # step5: cleanup artifacts in dist_electron
      - name: cleanup artifacts for Ubuntu
        if: matrix.os == 'ubuntu-18.04'
        run: |
          mkdir artifacts
          ls
          electron-installer-debian --src dist/electronic-wechat-linux-x64/ --dest dist/installers/ --arch amd64
          # electron-installer-debian --src dist/electronic-wechat-linux-arm64/ --dest dist/installers/ --arch arm64
          mv dist/installers/*.deb artifacts || true
      # tar -cvf electronic-wechat-linux-arm64.tar dist/electronic-wechat-linux-arm64/
      # tar -cvf electronic-wechat-linux-x64.tar dist/electronic-wechat-linux-x64/
      # mv *.tar artifacts || true
      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: artifacts

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'artifacts/**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
